#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'lucidity-test_types'

module CourseRequirementValidator
  class Client
    include ::Thrift::Client

    def valid(term_id, requirements)
      send_valid(term_id, requirements)
      return recv_valid()
    end

    def send_valid(term_id, requirements)
      send_message('valid', Valid_args, :term_id => term_id, :requirements => requirements)
    end

    def recv_valid()
      result = receive_message(Valid_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'valid failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_valid(seqid, iprot, oprot)
      args = read_args(iprot, Valid_args)
      result = Valid_result.new()
      result.success = @handler.valid(args.term_id, args.requirements)
      write_result(result, oprot, 'valid', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Valid_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TERM_ID = 1
    REQUIREMENTS = 2

    FIELDS = {
      TERM_ID => {:type => ::Thrift::Types::I32, :name => 'term_id'},
      REQUIREMENTS => {:type => ::Thrift::Types::LIST, :name => 'requirements', :element => {:type => ::Thrift::Types::STRUCT, :class => CourseRequirement}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Valid_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

